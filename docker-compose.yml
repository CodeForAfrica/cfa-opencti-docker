version: '3.8'

x-opencti-common-environment: &opencti-common-environment
  OPENCTI_URL: http://opencti:8080
  OPENCTI_TOKEN: ${OPENCTI_ADMIN_TOKEN}

x-connector-service-settings: &connnector-service-settings
  deploy: &connector-deploy-settings
    replicas: 1
    placement:
      constraints:
        - node.labels.role == opencti-core
  environment: &connector-environment-vars
    <<: *opencti-common-environment
    CONNECTOR_CONFIDENCE_LEVEL: 15 # From 0 (Unknown) to 100 (Fully trusted)
    CONNECTOR_LOG_LEVEL: info


services:
  redis:
    image: redis:7.2.4
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == cache-queue
    restart: always
    volumes:
      - redisdata:/data
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      # Comment-out the line below for a cluster of multiple nodes
      - discovery.type=single-node
      # Uncomment the line below below for a cluster of multiple nodes
      # - cluster.name=docker-cluster
      - xpack.ml.enabled=false
      - xpack.security.enabled=false
      - thread_pool.search.queue_size=5000
      - logger.org.elasticsearch.discovery="ERROR"
      - "ES_JAVA_OPTS=-Xms${ELASTIC_MEMORY_SIZE} -Xmx${ELASTIC_MEMORY_SIZE}"
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
  minio:
    image: minio/minio:RELEASE.2024-01-16T16-07-38Z
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == opencti-core
    volumes:
      - s3data:/data
    ports:
      - "9010:9000" #portainer exposed on port 9000
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO__ENDPOINT: ${MINIO__ENDPOINT}
      MINIO__ACCESS_KEY: ${MINIO__ACCESS_KEY}
      MINIO__SECRET_KEY: ${MINIO__SECRET_KEY}
      MINIO__BUCKET_NAME: ${MINIO__BUCKET_NAME}
      MINIO__BUCKET_REGION: ${MINIO__BUCKET_REGION}
    command: server /data
    restart: always

  rabbitmq:
    image: rabbitmq:3.13-management
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == cache-queue
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_NODENAME: rabbit01@localhost
    volumes:
      - amqpdata:/var/lib/rabbitmq
    restart: always

  opencti:
    image: opencti/platform:6.0.8
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == opencti-core
    environment:
      NODE_OPTIONS: --max-old-space-size=8096
      APP__PORT: 8080
      APP__BASE_URL: ${OPENCTI_BASE_URL}
      APP__ADMIN__EMAIL: ${OPENCTI_ADMIN_EMAIL}
      APP__ADMIN__PASSWORD: ${OPENCTI_ADMIN_PASSWORD}
      APP__ADMIN__TOKEN: ${OPENCTI_ADMIN_TOKEN}
      APP__APP_LOGS__LOGS_LEVEL: error
      REDIS__HOSTNAME: redis
      REDIS__PORT: 6379
      ELASTICSEARCH__URL: ${ELASTICSEARCH__URL} #List of Elasticsearch URLS
      MINIO__ENDPOINT: minio
      MINIO__PORT: 9000
      MINIO__USE_SSL: "false"
      MINIO__ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO__SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      RABBITMQ__HOSTNAME: rabbitmq
      RABBITMQ__PORT: 5672
      RABBITMQ__PORT_MANAGEMENT: 15672
      RABBITMQ__MANAGEMENT_SSL: "false"
      RABBITMQ__USERNAME: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ__PASSWORD: ${RABBITMQ_DEFAULT_PASS}
      SMTP__HOSTNAME: ${SMTP_HOSTNAME}
      SMTP__PORT: 25
      PROVIDERS__LOCAL__STRATEGY: LocalStrategy
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - minio
      - rabbitmq
    restart: always

  worker:
    image: opencti/worker:6.0.8
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.labels.role == opencti-core
    environment:
      <<: *opencti-common-environment
      WORKER_LOG_LEVEL: info
    depends_on:
      - opencti
    restart: always

  connector-export-file-stix:
    image: opencti/connector-export-file-stix:6.0.8
    deploy:
      <<: *connector-deploy-settings
    environment:
      <<: *connector-environment-vars
      CONNECTOR_ID: ${CONNECTOR_EXPORT_FILE_STIX_ID} # Valid UUIDv4
      CONNECTOR_TYPE: INTERNAL_EXPORT_FILE
      CONNECTOR_NAME: ExportFileStix2
      CONNECTOR_SCOPE: application/json
    restart: always
    depends_on:
      - opencti

  connector-export-file-csv:
    image: opencti/connector-export-file-csv:6.0.8
    deploy:
      <<: *connector-deploy-settings
    environment:
      <<: *connector-environment-vars
      CONNECTOR_ID: ${CONNECTOR_EXPORT_FILE_CSV_ID} # Valid UUIDv4
      CONNECTOR_TYPE: INTERNAL_EXPORT_FILE
      CONNECTOR_NAME: ExportFileCsv
      CONNECTOR_SCOPE: text/csv
    restart: always
    depends_on:
      - opencti

  connector-export-file-txt:
    image: opencti/connector-export-file-txt:6.0.8
    deploy:
      <<: *connector-deploy-settings
    environment:
      <<: *connector-environment-vars
      CONNECTOR_ID: ${CONNECTOR_EXPORT_FILE_TXT_ID} # Valid UUIDv4
      CONNECTOR_TYPE: INTERNAL_EXPORT_FILE
      CONNECTOR_NAME: ExportFileTxt
      CONNECTOR_SCOPE: text/plain
    restart: always
    depends_on:
      - opencti

  connector-import-file-stix:
    image: opencti/connector-import-file-stix:6.0.8
    deploy:
      <<: *connector-deploy-settings
    environment:
      <<: *connector-environment-vars
      CONNECTOR_ID: ${CONNECTOR_IMPORT_FILE_STIX_ID} # Valid UUIDv4
      CONNECTOR_TYPE: INTERNAL_IMPORT_FILE
      CONNECTOR_NAME: ImportFileStix
      CONNECTOR_VALIDATE_BEFORE_IMPORT:  # Validate any bundle before import
      CONNECTOR_SCOPE: application/json,text/xml
      CONNECTOR_AUTO: "true" # Enable/disable auto-import of file
    restart: always
    depends_on:
      - opencti

  connector-import-document:
    image: opencti/connector-import-document:6.0.8
    deploy:
      <<: *connector-deploy-settings
    environment:
      <<: *connector-environment-vars
      CONNECTOR_ID: ${CONNECTOR_IMPORT_DOCUMENT_ID} # Valid UUIDv4
      CONNECTOR_TYPE: INTERNAL_IMPORT_FILE
      CONNECTOR_NAME: ImportDocument
      CONNECTOR_VALIDATE_BEFORE_IMPORT: "true" # Validate any bundle before import
      CONNECTOR_SCOPE: application/pdf,text/plain,text/html
      CONNECTOR_AUTO: "true" # Enable/disable auto-import of file
      CONNECTOR_ONLY_CONTEXTUAL: "false" # Only extract data related to an entity (a report, a threat actor, etc.)
    restart: always
    depends_on:
      - opencti

volumes:
  esdata:
  s3data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/ubuntu/opencti/volumes/s3data
  redisdata:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/ubuntu/opencti/volumes/redisdata
  amqpdata:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/ubuntu/opencti/volumes/amqpdata

